<@include gpu/Config.slh@>
<$VERSION_HEADER$>
//  Generated on <$_SCRIBE_DATE$>
//  skybox.frag
//  fragment shader
//
//  Created by Sam Gateau on 5/5/2015.
//  Copyright 2015 High Fidelity, Inc.
//
//  Distributed under the Apache License, Version 2.0.
//  See the accompanying file LICENSE or http://www.apache.org/licenses/LICENSE-2.0.html
//

uniform samplerCube cubeMap;

struct Skybox {
    vec4 _color;
};

uniform skyboxBuffer {
    Skybox _skybox;
};

in vec3  _normal;
out vec4 _fragColor;

//PROCEDURAL_COMMON_BLOCK

#line 1001
//PROCEDURAL_BLOCK

#line 2033
void main(void) {

#ifdef PROCEDURAL

    vec3 color = getSkyboxColor();
    _fragColor = vec4(color, 0.0);

#else 

    vec3 coord = normalize(_normal);

    // Skybox color or blend with skymap
    vec3 color = _skybox._color.rgb;
    if (_skybox._color.a > 0.0) {
        vec3 texel = texture(cubeMap, coord).rgb;
        if (_skybox._color.a < 2.0) {
            color *= texel;
        } else {
            color = texel;
        }
   }

    vec3 pixel = pow(color, vec3(1.0/2.2)); // manual Gamma correction
    _fragColor = vec4(pixel, 0.0);

#endif

}
