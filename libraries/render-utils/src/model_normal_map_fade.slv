<@include gpu/Config.slh@>
<$VERSION_HEADER$>
//  Generated on <$_SCRIBE_DATE$>
//
//  model_normal_map_fade.vert
//  vertex shader
//
//  Created by Olivier Prat on 04/24/17.
//  Copyright 2017 High Fidelity, Inc.
//
//  Distributed under the Apache License, Version 2.0.
//  See the accompanying file LICENSE or http://www.apache.org/licenses/LICENSE-2.0.html
//

<@include gpu/Inputs.slh@>
<@include gpu/Color.slh@>
<@include gpu/Transform.slh@>
<$declareStandardTransform()$>

<@include MaterialTextures.slh@>
<$declareMaterialTexMapArrayBuffer()$>

out vec4 _positionES;
out vec4 _positionWS;
out vec2 _texCoord0;
out vec2 _texCoord1;
out vec3 _normalWS;
out vec3 _tangentWS;
out vec3 _color;
out float _alpha;

void main(void) {
    // pass along the color
    _color = color_sRGBToLinear(inColor.rgb);
    _alpha = inColor.a;

    TexMapArray texMapArray = getTexMapArray();
    <$evalTexMapArrayTexcoord0(texMapArray, inTexCoord0, _texCoord0)$>
    <$evalTexMapArrayTexcoord1(texMapArray, inTexCoord0, _texCoord1)$>

    // standard transform
    TransformCamera cam = getTransformCamera();
    TransformObject obj = getTransformObject();
    <$transformModelToEyeAndClipPos(cam, obj, inPosition, _positionES, gl_Position)$>
    <$transformModelToWorldPos(obj, inPosition, _positionWS)$>
    <$transformModelToWorldDir(cam, obj, inNormal.xyz, _normalWS)$>
    <$transformModelToWorldDir(cam, obj, inTangent.xyz, _tangentWS)$>
}
